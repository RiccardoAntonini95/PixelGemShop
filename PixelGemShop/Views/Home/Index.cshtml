@model PixelGemShop.Models.Products

<main>
    @*TAG SEMANTICI HEADER, SECTION, ASIDE ECC.*@

    @*HERO*@
    <div id="hero" class="text-center position-relative d-flex justify-content-center align-items-center">
        <video src="@Url.Content("~/Uploads/gem-video.mp4")" id="youtube" autoplay muted loop></video>
        <h1 id="heroText">"Unearth Gaming Gems at Pixel Gem Shop: Where Every Purchase is Sparkling Treasure!"</h1>
    </div>

    @*IN PRIMO PIANO*@
    <section class="text-center">
        <h2>Editor's Choice</h2>
        <div class="editors-choice">
            <div class="row gx-2 m-0">
                @for (int i = 0; i < 4; i++)
                {
                    var product = ViewBag.editorsChoice[i];
                    <div class="card col-6 col-md-3">
                        <img src="@Url.Content("~/Uploads/" + product.Image)" class="card-img-top" alt="product-image" />
                        <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <p>voti stelle qua</p>
                            @if (product.DiscountPercentage == null)
                            {
                                <p class="card-text">@product.Price&euro;</p>
                            }
                            else
                            {
                                <p>
                                    <span class="text-decoration-line-through">@product.Price&euro;</span> -@product.DiscountPercentage%
                                    <br>
                                    <span class="text-success fw-bold">@(Math.Round(product.Price - (product.Price * ((decimal)product.DiscountPercentage / 100M)), 2))&euro;</span>

                                </p>
                            }
                            @if (product.Stock < 10 && product.Stock > 0)
                            {
                                <p class="text-warning">Only @product.Stock available!</p>
                            }
                            @if (product.Stock == 0)
                            {
                                <p class="text-danger">Product out of stock</p>
                            }
                            @Html.ActionLink("Details", "Details", "Products", new { id = product.IdProduct }, new { @class = "btn btn-primary" })
                        </div>
                        <div class="card-footer">
                            @*TODO: FUNZIONALITA' PER AGGIUNGERE AL CARRELLO*@
                            @using (Html.BeginForm())
                            {
                                <label for="quantity-@i">Quantity: </label>
                                <input type="number" class="form-control" id="quantity-@i" min="1" name="quantity">
                                <button class="btn btn-outline-secondary" type="submit">Add to cart</button>
                                if (User.IsInRole("Admin"))
                                {
                                    @Html.ActionLink("Edit", "Edit", "Products", new { id = product.IdProduct }, new { @class = "btn btn-warning" })
                                }
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>


    @*OFFERTE*@
    <section class="text-center">
        @*TODO: Link Vedi Altro*@
        <h2>Savings Zone</h2>
        <div class="savings">
            <div class="row m-0">
                @for (int i = 0; i < Math.Min(ViewBag.savings.Count, 6); i++)   //cicla il numero minimo di prodotti tra viewbag e 6
                {
                    var product = ViewBag.savings[i];
                    <div class="col-4 col-md-2 card">
                        <img src="@Url.Content("~/Uploads/" + product.Image)" class="card-img-top" alt="product-image" />
                        <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text">
                                <span class="text-decoration-line-through">@product.Price&euro;</span> -@product.DiscountPercentage%
                                <br>
                                <span class="text-success fw-bold">@(Math.Round(product.Price - (product.Price * ((decimal)product.DiscountPercentage / 100M)), 2))&euro;</span>
                                @*Questo valore serve nel carrello*@
                            </p>
                            @if (product.Stock < 10 && product.Stock > 0)
                            {
                                <p class="text-warning">Only @product.Stock available!</p>
                            }
                            @if (product.Stock == 0)
                            {
                                <p class="text-danger">Product out of stock</p>
                            }
                            @Html.ActionLink("Details", "Details", "Products", new { id = product.IdProduct }, new { @class = "btn btn-primary" })
                        </div>
                        <div class="card-footer">
                            @*TODO: FUNZIONALITA' PER AGGIUNGERE AL CARRELLO*@
                            @using (Html.BeginForm())
                            {
                                <label for="quantity-@i">Quantity: </label>
                                <input type="number" class="form-control" id="quantity-@i" min="1" name="quantity">
                                <button class="btn btn-outline-secondary" type="submit">Add to cart</button>
                                if (User.IsInRole("Admin"))
                                {
                                    @Html.ActionLink("Edit", "Edit", "Products", new { id = product.IdProduct }, new { @class = "btn btn-warning" })
                                }
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>


    @*SHOP BY CATEGORIES*@
    <section>
        <div class="shop-by-categories text-center">
            <h2>Shop by categories</h2>
            <div class="row gap-2">
                <div class="category-container videogames col">
                      @Html.ActionLink("Videogames", "Index", "Videogames", new { area = "" }, new { @class = "category-link" })
                </div>
                <div class="category-container console col">
                    @Html.ActionLink("Console", "Index", "Console", new { area = "" }, new { @class = "category-link" })
                </div>
                <div class="category-container accessories col">
                    @Html.ActionLink("Accessories", "Index", "Accessories", new { area = "" }, new { @class = "category-link" })
                </div>
            </div>
        </div>
    </section>


    @*CAROUSEL*@
    <section>
        <div id="carouselContainer" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <figure>
                        <img src="@Url.Content("~/Content/Images/carousel1.jpg")" class="carousel-pic d-block w-100" alt="CarouselImage1">
                    </figure>
                </div>
                <div class="carousel-item">
                    <figure>
                        <img src="@Url.Content("~/Content/Images/carousel2.jpg")" class="carousel-pic d-block w-100" alt="CarouselImage2">
                    </figure>
                </div>
                <div class="carousel-item">
                    <figure>
                        <img src="@Url.Content("~/Content/Images/carousel3.jpg")" class="carousel-pic d-block w-100" alt="CarouselImage3">
                    </figure>
                </div>
                <div class="carousel-item">
                    <figure>
                        <img src="@Url.Content("~/Content/Images/carousel4.jpg")" class="carousel-pic d-block w-100" alt="CarouselImage4">
                    </figure>
                </div>
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselContainer" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselContainer" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </section>

</main>