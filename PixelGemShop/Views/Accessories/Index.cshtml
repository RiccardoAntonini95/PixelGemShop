
@{
    ViewBag.Title = "Index";
}
@if (TempData["Message"] != null)  //Feedback positivo riuscita operazione
{
    <div id="alertDiv" class="alert" role="alert">
        @TempData["Message"]
    </div>
}


<div class="row gx-2 m-0 text-center">
    <h2 class="text-gold fw-bold display-5 mb-3">Accessories</h2>
    @foreach (var product in Model)
    {
        <div class="card col-6 col-md-3 text-smoke primary-bg">
            <img src="@Url.Content("~/Uploads/" + product.Image)" class="card-img-top" alt="product-image" />
            <div class="card-body">
                <h5 class="card-title">@product.Name</h5>
                <input type="hidden" class="average-rating" value="@product.AverageRating" />
                <div class="stars-container">
                    <p class="text-gold mb-0">Average rating</p>
                    @for (int i = 1; i <= 5; i++)
                    {
                        <svg class="star-avg-rating" viewBox="0 0 24 24" width="20" height="20">
                            <path d="M12 2 L15.09 8.26 L22 9.27 L17 14.14 L18.18 21.02 L12 17.77 L5.82 21.02 L7 14.14 L2 9.27 L8.91 8.26 L12 2"></path>
                        </svg>
                    }
                </div>
                @if (product.DiscountPercentage == null)
                {
                    <p class="card-text">@product.Price&euro;</p>
                }
                else
                {
                    <p>
                        <span class="text-decoration-line-through">@product.Price&euro;</span> -@product.DiscountPercentage%
                        <br>
                        <span class="text-gold fw-bold">@(Math.Round(product.Price - (product.Price * ((decimal)product.DiscountPercentage / 100M)), 2))&euro;</span>

                    </p>
                }
                @if (product.Stock < 10 && product.Stock > 0)
                {
                    <p class="text-warning">Only @product.Stock available!</p>
                }
                @if (product.Stock == 0)
                {
                    <p class="text-danger">Product out of stock</p>
                }
                @if (User.IsInRole("Admin"))
                {
                    @Html.ActionLink("Edit", "Edit", "Products", new { id = product.IdProduct }, new { @class = "btn glow-on-hover" })
                }
            </div>
            @if (product.Stock == 0)
                {
                    <div class="card-footer">@Html.ActionLink("Details", "Details", "Products", new { id = product.IdProduct }, new { @class = "btn btn-darker-accent glow-on-hover" })</div>
                }
            @if (product.Stock != 0)
            {
                <div class="card-footer">
                    @using (Html.BeginForm("AddToCart", "Cart"))
                    {
                        @Html.AntiForgeryToken();
                        <input type="hidden" name="IdProduct" value="@product.IdProduct" />
                        <input type="hidden" name="returnUrl" value="@Request.Url.PathAndQuery" />
                        <div class="d-flex flex-column align-items-center">
                            <label for="quantity">Quantity: </label>
                            <input type="number" class="quantity-input" id="quantity" min="1" name="quantity" value="1">
                        </div>
                        <button class="btn glow-on-hover" type="submit">Add to cart</button>
                    }
                </div>
            }
        </div>
    }
</div>

@section scripts{
    <script src="~/Scripts/avgStars.js" defer></script>
}


